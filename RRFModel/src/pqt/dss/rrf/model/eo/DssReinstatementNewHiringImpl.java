package pqt.dss.rrf.model.eo;

import java.sql.SQLException;

import javax.faces.context.ExternalContext;
import javax.faces.context.FacesContext;

import javax.servlet.http.HttpSession;

import oracle.jbo.AttributeList;
import oracle.jbo.Key;
import oracle.jbo.domain.Date;
import oracle.jbo.domain.Number;
import oracle.jbo.server.EntityDefImpl;
import oracle.jbo.server.EntityImpl;
import oracle.jbo.server.SequenceImpl;
import oracle.jbo.server.TransactionEvent;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Mon Oct 10 16:58:46 PKT 2016
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class DssReinstatementNewHiringImpl extends EntityImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    public enum AttributesEnum {
        NewHiringIdPk,
        RrfIdFk,
        AgentNoFk,
        MonthDate,
        Consultants,
        TeamLeader,
        Abuhs,
        Buhs,
        Producers,
        Cases,
        Contribution,
        UserIdFk,
        EnterDate,
        LastUpdatedBy,
        LastUpdatedDate,
        DssReinstatementRequestForm1;
        private static AttributesEnum[] vals = null;
        private static final int firstIndex = 0;

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static final int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int NEWHIRINGIDPK = AttributesEnum.NewHiringIdPk.index();
    public static final int RRFIDFK = AttributesEnum.RrfIdFk.index();
    public static final int AGENTNOFK = AttributesEnum.AgentNoFk.index();
    public static final int MONTHDATE = AttributesEnum.MonthDate.index();
    public static final int CONSULTANTS = AttributesEnum.Consultants.index();
    public static final int TEAMLEADER = AttributesEnum.TeamLeader.index();
    public static final int ABUHS = AttributesEnum.Abuhs.index();
    public static final int BUHS = AttributesEnum.Buhs.index();
    public static final int PRODUCERS = AttributesEnum.Producers.index();
    public static final int CASES = AttributesEnum.Cases.index();
    public static final int CONTRIBUTION = AttributesEnum.Contribution.index();
    public static final int USERIDFK = AttributesEnum.UserIdFk.index();
    public static final int ENTERDATE = AttributesEnum.EnterDate.index();
    public static final int LASTUPDATEDBY = AttributesEnum.LastUpdatedBy.index();
    public static final int LASTUPDATEDDATE = AttributesEnum.LastUpdatedDate.index();
    public static final int DSSREINSTATEMENTREQUESTFORM1 = AttributesEnum.DssReinstatementRequestForm1.index();

    /**
     * This is the default constructor (do not remove).
     */
    public DssReinstatementNewHiringImpl() {
    }

    /**
     * @return the definition object for this instance class.
     */
    public static synchronized EntityDefImpl getDefinitionObject() {
        return EntityDefImpl.findDefObject("pqt.dss.rrf.model.eo.DssReinstatementNewHiring");
    }


    /**
     * Gets the attribute value for NewHiringIdPk, using the alias name NewHiringIdPk.
     * @return the value of NewHiringIdPk
     */
    public Number getNewHiringIdPk() {
        return (Number) getAttributeInternal(NEWHIRINGIDPK);
    }

    /**
     * Sets <code>value</code> as the attribute value for NewHiringIdPk.
     * @param value value to set the NewHiringIdPk
     */
    public void setNewHiringIdPk(Number value) {
        setAttributeInternal(NEWHIRINGIDPK, value);
    }

    /**
     * Gets the attribute value for RrfIdFk, using the alias name RrfIdFk.
     * @return the value of RrfIdFk
     */
    public Number getRrfIdFk() {
        return (Number) getAttributeInternal(RRFIDFK);
    }

    /**
     * Sets <code>value</code> as the attribute value for RrfIdFk.
     * @param value value to set the RrfIdFk
     */
    public void setRrfIdFk(Number value) {
        setAttributeInternal(RRFIDFK, value);
    }

    /**
     * Gets the attribute value for AgentNoFk, using the alias name AgentNoFk.
     * @return the value of AgentNoFk
     */
    public Number getAgentNoFk() {
        return (Number) getAttributeInternal(AGENTNOFK);
    }

    /**
     * Sets <code>value</code> as the attribute value for AgentNoFk.
     * @param value value to set the AgentNoFk
     */
    public void setAgentNoFk(Number value) {
        setAttributeInternal(AGENTNOFK, value);
    }

    /**
     * Gets the attribute value for MonthDate, using the alias name MonthDate.
     * @return the value of MonthDate
     */
    public Date getMonthDate() {
        return (Date) getAttributeInternal(MONTHDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for MonthDate.
     * @param value value to set the MonthDate
     */
    public void setMonthDate(Date value) {
        setAttributeInternal(MONTHDATE, value);
    }

    /**
     * Gets the attribute value for Consultants, using the alias name Consultants.
     * @return the value of Consultants
     */
    public String getConsultants() {
        return (String) getAttributeInternal(CONSULTANTS);
    }

    /**
     * Sets <code>value</code> as the attribute value for Consultants.
     * @param value value to set the Consultants
     */
    public void setConsultants(String value) {
        setAttributeInternal(CONSULTANTS, value);
    }

    /**
     * Gets the attribute value for TeamLeader, using the alias name TeamLeader.
     * @return the value of TeamLeader
     */
    public String getTeamLeader() {
        return (String) getAttributeInternal(TEAMLEADER);
    }

    /**
     * Sets <code>value</code> as the attribute value for TeamLeader.
     * @param value value to set the TeamLeader
     */
    public void setTeamLeader(String value) {
        setAttributeInternal(TEAMLEADER, value);
    }

    /**
     * Gets the attribute value for Abuhs, using the alias name Abuhs.
     * @return the value of Abuhs
     */
    public String getAbuhs() {
        return (String) getAttributeInternal(ABUHS);
    }

    /**
     * Sets <code>value</code> as the attribute value for Abuhs.
     * @param value value to set the Abuhs
     */
    public void setAbuhs(String value) {
        setAttributeInternal(ABUHS, value);
    }

    /**
     * Gets the attribute value for Buhs, using the alias name Buhs.
     * @return the value of Buhs
     */
    public String getBuhs() {
        return (String) getAttributeInternal(BUHS);
    }

    /**
     * Sets <code>value</code> as the attribute value for Buhs.
     * @param value value to set the Buhs
     */
    public void setBuhs(String value) {
        setAttributeInternal(BUHS, value);
    }

    /**
     * Gets the attribute value for Producers, using the alias name Producers.
     * @return the value of Producers
     */
    public String getProducers() {
        return (String) getAttributeInternal(PRODUCERS);
    }

    /**
     * Sets <code>value</code> as the attribute value for Producers.
     * @param value value to set the Producers
     */
    public void setProducers(String value) {
        setAttributeInternal(PRODUCERS, value);
    }

    /**
     * Gets the attribute value for Cases, using the alias name Cases.
     * @return the value of Cases
     */
    public String getCases() {
        return (String) getAttributeInternal(CASES);
    }

    /**
     * Sets <code>value</code> as the attribute value for Cases.
     * @param value value to set the Cases
     */
    public void setCases(String value) {
        setAttributeInternal(CASES, value);
    }

    /**
     * Gets the attribute value for Contribution, using the alias name Contribution.
     * @return the value of Contribution
     */
    public String getContribution() {
        return (String) getAttributeInternal(CONTRIBUTION);
    }

    /**
     * Sets <code>value</code> as the attribute value for Contribution.
     * @param value value to set the Contribution
     */
    public void setContribution(String value) {
        setAttributeInternal(CONTRIBUTION, value);
    }

    /**
     * Gets the attribute value for UserIdFk, using the alias name UserIdFk.
     * @return the value of UserIdFk
     */
    public Number getUserIdFk() {
        return (Number) getAttributeInternal(USERIDFK);
    }

    /**
     * Sets <code>value</code> as the attribute value for UserIdFk.
     * @param value value to set the UserIdFk
     */
    public void setUserIdFk(Number value) {
        setAttributeInternal(USERIDFK, value);
    }

    /**
     * Gets the attribute value for EnterDate, using the alias name EnterDate.
     * @return the value of EnterDate
     */
    public Date getEnterDate() {
        return (Date) getAttributeInternal(ENTERDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for EnterDate.
     * @param value value to set the EnterDate
     */
    public void setEnterDate(Date value) {
        setAttributeInternal(ENTERDATE, value);
    }

    /**
     * Gets the attribute value for LastUpdatedBy, using the alias name LastUpdatedBy.
     * @return the value of LastUpdatedBy
     */
    public Number getLastUpdatedBy() {
        return (Number) getAttributeInternal(LASTUPDATEDBY);
    }

    /**
     * Sets <code>value</code> as the attribute value for LastUpdatedBy.
     * @param value value to set the LastUpdatedBy
     */
    public void setLastUpdatedBy(Number value) {
        setAttributeInternal(LASTUPDATEDBY, value);
    }

    /**
     * Gets the attribute value for LastUpdatedDate, using the alias name LastUpdatedDate.
     * @return the value of LastUpdatedDate
     */
    public Date getLastUpdatedDate() {
        return (Date) getAttributeInternal(LASTUPDATEDDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for LastUpdatedDate.
     * @param value value to set the LastUpdatedDate
     */
    public void setLastUpdatedDate(Date value) {
        setAttributeInternal(LASTUPDATEDDATE, value);
    }


    /**
     * @return the associated entity DssReinstatementRequestFormImpl.
     */
    public DssReinstatementRequestFormImpl getDssReinstatementRequestForm1() {
        return (DssReinstatementRequestFormImpl) getAttributeInternal(DSSREINSTATEMENTREQUESTFORM1);
    }

    /**
     * Sets <code>value</code> as the associated entity DssReinstatementRequestFormImpl.
     */
    public void setDssReinstatementRequestForm1(DssReinstatementRequestFormImpl value) {
        setAttributeInternal(DSSREINSTATEMENTREQUESTFORM1, value);
    }


    /**
     * @param newHiringIdPk key constituent

     * @return a Key object based on given key constituents.
     */
    public static Key createPrimaryKey(Number newHiringIdPk) {
        return new Key(new Object[] { newHiringIdPk });
    }

    /**
     * Add attribute defaulting logic in this method.
     * @param attributeList list of attribute names/values to initialize the row
     */
    protected void create(AttributeList attributeList) {
                 super.create(attributeList);
                 Date currentDate = new Date();
                 setEnterDate((Date) currentDate.getCurrentDate());
                 setLastUpdatedDate((Date) currentDate.getCurrentDate());
                 SequenceImpl seq = new SequenceImpl("DSS_TRAVELEXPANSE_DETAIL_SEQ", getDBTransaction());
                 setNewHiringIdPk(seq.getSequenceNumber());
                 
                 
                 FacesContext fctx = FacesContext.getCurrentInstance();
                 ExternalContext ectx = fctx.getExternalContext();
                 HttpSession userSession = (HttpSession) ectx.getSession(false);
                 try {
                     setUserIdFk(new Number(userSession.getAttribute("pUserId")));
                     setLastUpdatedBy(new Number(userSession.getAttribute("pUserId")));
                 } catch (SQLException ex) {
                     setUserIdFk(new Number(0));
                     setLastUpdatedBy(new Number(0));
                 }
    }
    /**
     * Add locking logic here.
     */
    public void lock() {
        super.lock();
    }

    /**
     * Custom DML update/insert/delete logic here.
     * @param operation the operation type
     * @param e the transaction event
     */
    protected void doDML(int operation, TransactionEvent e) {
            Date currentDate = new Date();
            if (operation == DML_UPDATE) {
                setLastUpdatedDate((Date) currentDate.getCurrentDate());
                FacesContext fctx = FacesContext.getCurrentInstance();
                ExternalContext ectx = fctx.getExternalContext();
                HttpSession userSession = (HttpSession) ectx.getSession(false);
                try {
                    setUserIdFk(new Number(userSession.getAttribute("pUserId")));
                    setLastUpdatedBy(new Number(userSession.getAttribute("pUserId")));
                } catch (SQLException ex) {
                    setUserIdFk(new Number(0));
                    setLastUpdatedBy(new Number(0));
                }
            }
            super.doDML(operation, e);
        }
        }

