package pqt.dss.rrf.model.eo;

import java.math.BigDecimal;

import java.sql.CallableStatement;
import java.sql.SQLException;
import java.sql.Timestamp;

import java.sql.Types;

import javax.faces.context.ExternalContext;
import javax.faces.context.FacesContext;

import javax.servlet.http.HttpSession;

import oracle.jbo.AttributeList;
import oracle.jbo.Key;
import oracle.jbo.RowIterator;
import oracle.jbo.domain.Date;
import oracle.jbo.domain.Number;
import oracle.jbo.server.DBTransaction;
import oracle.jbo.server.EntityDefImpl;
import oracle.jbo.server.EntityImpl;
import oracle.jbo.server.SequenceImpl;
import oracle.jbo.server.TransactionEvent;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Fri Jun 17 11:07:21 PKT 2016
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class DssReinstatementRequestFormImpl extends EntityImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    public enum AttributesEnum {
        RrfIdPk,
        AgentNoFk,
        CurrentRankCodeFk,
        NewRankCodeFk,
        EffectiveFrom,
        ReportingManagerNoFk,
        Remarks,
        BankAccNo,
        UlNo,
        UserIdFk,
        EnterDate,
        LastUpdatedBy,
        LastUpdatedDate,
        Status,
        StartDate,
        EndDate,
        BranchStatus,
        DssStatus,
        BranchNotifIdFk,
        DssNotifIdFk,
        CurrBranchCodeFk,
        NewBranchCodeFk,
        RrfDocNo,
        WorkflowNotificationId,
        WorkflowStatus,
        DssReinstatementExistMgr,
        DssReinstatementNewHiring1;
        private static AttributesEnum[] vals = null;
        private static final int firstIndex = 0;

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static final int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int RRFIDPK = AttributesEnum.RrfIdPk.index();
    public static final int AGENTNOFK = AttributesEnum.AgentNoFk.index();
    public static final int CURRENTRANKCODEFK = AttributesEnum.CurrentRankCodeFk.index();
    public static final int NEWRANKCODEFK = AttributesEnum.NewRankCodeFk.index();
    public static final int EFFECTIVEFROM = AttributesEnum.EffectiveFrom.index();
    public static final int REPORTINGMANAGERNOFK = AttributesEnum.ReportingManagerNoFk.index();
    public static final int REMARKS = AttributesEnum.Remarks.index();
    public static final int BANKACCNO = AttributesEnum.BankAccNo.index();
    public static final int ULNO = AttributesEnum.UlNo.index();
    public static final int USERIDFK = AttributesEnum.UserIdFk.index();
    public static final int ENTERDATE = AttributesEnum.EnterDate.index();
    public static final int LASTUPDATEDBY = AttributesEnum.LastUpdatedBy.index();
    public static final int LASTUPDATEDDATE = AttributesEnum.LastUpdatedDate.index();
    public static final int STATUS = AttributesEnum.Status.index();
    public static final int STARTDATE = AttributesEnum.StartDate.index();
    public static final int ENDDATE = AttributesEnum.EndDate.index();
    public static final int BRANCHSTATUS = AttributesEnum.BranchStatus.index();
    public static final int DSSSTATUS = AttributesEnum.DssStatus.index();
    public static final int BRANCHNOTIFIDFK = AttributesEnum.BranchNotifIdFk.index();
    public static final int DSSNOTIFIDFK = AttributesEnum.DssNotifIdFk.index();
    public static final int CURRBRANCHCODEFK = AttributesEnum.CurrBranchCodeFk.index();
    public static final int NEWBRANCHCODEFK = AttributesEnum.NewBranchCodeFk.index();
    public static final int RRFDOCNO = AttributesEnum.RrfDocNo.index();
    public static final int WORKFLOWNOTIFICATIONID = AttributesEnum.WorkflowNotificationId.index();
    public static final int WORKFLOWSTATUS = AttributesEnum.WorkflowStatus.index();
    public static final int DSSREINSTATEMENTEXISTMGR = AttributesEnum.DssReinstatementExistMgr.index();
    public static final int DSSREINSTATEMENTNEWHIRING1 = AttributesEnum.DssReinstatementNewHiring1.index();

    /**
     * This is the default constructor (do not remove).
     */
    public DssReinstatementRequestFormImpl() {
    }

    /**
     * @return the definition object for this instance class.
     */
    public static synchronized EntityDefImpl getDefinitionObject() {
        return EntityDefImpl.findDefObject("pqt.dss.rrf.model.eo.DssReinstatementRequestForm");
    }


    /**
     * Gets the attribute value for RrfIdPk, using the alias name RrfIdPk.
     * @return the value of RrfIdPk
     */
    public oracle.jbo.domain.Number getRrfIdPk() {
        return (oracle.jbo.domain.Number) getAttributeInternal(RRFIDPK);
    }

    /**
     * Sets <code>value</code> as the attribute value for RrfIdPk.
     * @param value value to set the RrfIdPk
     */
    public void setRrfIdPk(oracle.jbo.domain.Number value) {
        setAttributeInternal(RRFIDPK, value);
    }

    /**
     * Gets the attribute value for AgentNoFk, using the alias name AgentNoFk.
     * @return the value of AgentNoFk
     */
    public Number getAgentNoFk() {
        return (Number) getAttributeInternal(AGENTNOFK);
    }

    /**
     * Sets <code>value</code> as the attribute value for AgentNoFk.
     * @param value value to set the AgentNoFk
     */
    public void setAgentNoFk(Number value) {
        setAttributeInternal(AGENTNOFK, value);
    }

    /**
     * Gets the attribute value for CurrentRankCodeFk, using the alias name CurrentRankCodeFk.
     * @return the value of CurrentRankCodeFk
     */
    public String getCurrentRankCodeFk() {
        return (String) getAttributeInternal(CURRENTRANKCODEFK);
    }

    /**
     * Sets <code>value</code> as the attribute value for CurrentRankCodeFk.
     * @param value value to set the CurrentRankCodeFk
     */
    public void setCurrentRankCodeFk(String value) {
        setAttributeInternal(CURRENTRANKCODEFK, value);
    }

    /**
     * Gets the attribute value for NewRankCodeFk, using the alias name NewRankCodeFk.
     * @return the value of NewRankCodeFk
     */
    public String getNewRankCodeFk() {
        return (String) getAttributeInternal(NEWRANKCODEFK);
    }

    /**
     * Sets <code>value</code> as the attribute value for NewRankCodeFk.
     * @param value value to set the NewRankCodeFk
     */
    public void setNewRankCodeFk(String value) {
        setAttributeInternal(NEWRANKCODEFK, value);
    }

    /**
     * Gets the attribute value for EffectiveFrom, using the alias name EffectiveFrom.
     * @return the value of EffectiveFrom
     */
    public oracle.jbo.domain.Date getEffectiveFrom() {
        return (oracle.jbo.domain.Date) getAttributeInternal(EFFECTIVEFROM);
    }

    /**
     * Sets <code>value</code> as the attribute value for EffectiveFrom.
     * @param value value to set the EffectiveFrom
     */
    public void setEffectiveFrom(oracle.jbo.domain.Date value) {
        setAttributeInternal(EFFECTIVEFROM, value);
    }

    /**
     * Gets the attribute value for ReportingManagerNoFk, using the alias name ReportingManagerNoFk.
     * @return the value of ReportingManagerNoFk
     */
    public Number getReportingManagerNoFk() {
        return (Number) getAttributeInternal(REPORTINGMANAGERNOFK);
    }

    /**
     * Sets <code>value</code> as the attribute value for ReportingManagerNoFk.
     * @param value value to set the ReportingManagerNoFk
     */
    public void setReportingManagerNoFk(Number value) {
        setAttributeInternal(REPORTINGMANAGERNOFK, value);
    }

    /**
     * Gets the attribute value for Remarks, using the alias name Remarks.
     * @return the value of Remarks
     */
    public String getRemarks() {
        return (String) getAttributeInternal(REMARKS);
    }

    /**
     * Sets <code>value</code> as the attribute value for Remarks.
     * @param value value to set the Remarks
     */
    public void setRemarks(String value) {
        setAttributeInternal(REMARKS, value);
    }


    /**
     * Gets the attribute value for BankAccNo, using the alias name BankAccNo.
     * @return the value of BankAccNo
     */
    public String getBankAccNo() {
        return (String) getAttributeInternal(BANKACCNO);
    }

    /**
     * Sets <code>value</code> as the attribute value for BankAccNo.
     * @param value value to set the BankAccNo
     */
    public void setBankAccNo(String value) {
        setAttributeInternal(BANKACCNO, value);
    }

    /**
     * Gets the attribute value for UlNo, using the alias name UlNo.
     * @return the value of UlNo
     */
    public Number getUlNo() {
        return (Number) getAttributeInternal(ULNO);
    }

    /**
     * Sets <code>value</code> as the attribute value for UlNo.
     * @param value value to set the UlNo
     */
    public void setUlNo(Number value) {
        setAttributeInternal(ULNO, value);
    }


    /**
     * Gets the attribute value for UserIdFk, using the alias name UserIdFk.
     * @return the value of UserIdFk
     */
    public Number getUserIdFk() {
        return (Number) getAttributeInternal(USERIDFK);
    }

    /**
     * Sets <code>value</code> as the attribute value for UserIdFk.
     * @param value value to set the UserIdFk
     */
    public void setUserIdFk(Number value) {
        setAttributeInternal(USERIDFK, value);
    }

    /**
     * Gets the attribute value for EnterDate, using the alias name EnterDate.
     * @return the value of EnterDate
     */
    public oracle.jbo.domain.Date getEnterDate() {
        return (oracle.jbo.domain.Date) getAttributeInternal(ENTERDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for EnterDate.
     * @param value value to set the EnterDate
     */
    public void setEnterDate(oracle.jbo.domain.Date value) {
        setAttributeInternal(ENTERDATE, value);
    }

    /**
     * Gets the attribute value for LastUpdatedBy, using the alias name LastUpdatedBy.
     * @return the value of LastUpdatedBy
     */
    public Number getLastUpdatedBy() {
        return (Number) getAttributeInternal(LASTUPDATEDBY);
    }

    /**
     * Sets <code>value</code> as the attribute value for LastUpdatedBy.
     * @param value value to set the LastUpdatedBy
     */
    public void setLastUpdatedBy(Number value) {
        setAttributeInternal(LASTUPDATEDBY, value);
    }

    /**
     * Gets the attribute value for LastUpdatedDate, using the alias name LastUpdatedDate.
     * @return the value of LastUpdatedDate
     */
    public oracle.jbo.domain.Date getLastUpdatedDate() {
        return (oracle.jbo.domain.Date) getAttributeInternal(LASTUPDATEDDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for LastUpdatedDate.
     * @param value value to set the LastUpdatedDate
     */
    public void setLastUpdatedDate(oracle.jbo.domain.Date value) {
        setAttributeInternal(LASTUPDATEDDATE, value);
    }


    /**
     * Gets the attribute value for Status, using the alias name Status.
     * @return the value of Status
     */
    public String getStatus() {
        return (String) getAttributeInternal(STATUS);
    }

    /**
     * Sets <code>value</code> as the attribute value for Status.
     * @param value value to set the Status
     */
    public void setStatus(String value) {
        setAttributeInternal(STATUS, value);
    }

    /**
     * Gets the attribute value for StartDate, using the alias name StartDate.
     * @return the value of StartDate
     */
    public Date getStartDate() {
        return (Date) getAttributeInternal(STARTDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for StartDate.
     * @param value value to set the StartDate
     */
    public void setStartDate(Date value) {
        setAttributeInternal(STARTDATE, value);
    }

    /**
     * Gets the attribute value for EndDate, using the alias name EndDate.
     * @return the value of EndDate
     */
    public Date getEndDate() {
        return (Date) getAttributeInternal(ENDDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for EndDate.
     * @param value value to set the EndDate
     */
    public void setEndDate(Date value) {
        setAttributeInternal(ENDDATE, value);
    }


    /**
     * Gets the attribute value for BranchStatus, using the alias name BranchStatus.
     * @return the value of BranchStatus
     */
    public String getBranchStatus() {
        return (String) getAttributeInternal(BRANCHSTATUS);
    }

    /**
     * Sets <code>value</code> as the attribute value for BranchStatus.
     * @param value value to set the BranchStatus
     */
    public void setBranchStatus(String value) {
        setAttributeInternal(BRANCHSTATUS, value);
    }

    /**
     * Gets the attribute value for DssStatus, using the alias name DssStatus.
     * @return the value of DssStatus
     */
    public String getDssStatus() {
        return (String) getAttributeInternal(DSSSTATUS);
    }

    /**
     * Sets <code>value</code> as the attribute value for DssStatus.
     * @param value value to set the DssStatus
     */
    public void setDssStatus(String value) {
        setAttributeInternal(DSSSTATUS, value);
    }

    /**
     * Gets the attribute value for BranchNotifIdFk, using the alias name BranchNotifIdFk.
     * @return the value of BranchNotifIdFk
     */
    public Number getBranchNotifIdFk() {
        return (Number) getAttributeInternal(BRANCHNOTIFIDFK);
    }

    /**
     * Sets <code>value</code> as the attribute value for BranchNotifIdFk.
     * @param value value to set the BranchNotifIdFk
     */
    public void setBranchNotifIdFk(Number value) {
        setAttributeInternal(BRANCHNOTIFIDFK, value);
    }

    /**
     * Gets the attribute value for DssNotifIdFk, using the alias name DssNotifIdFk.
     * @return the value of DssNotifIdFk
     */
    public Number getDssNotifIdFk() {
        return (Number) getAttributeInternal(DSSNOTIFIDFK);
    }

    /**
     * Sets <code>value</code> as the attribute value for DssNotifIdFk.
     * @param value value to set the DssNotifIdFk
     */
    public void setDssNotifIdFk(Number value) {
        setAttributeInternal(DSSNOTIFIDFK, value);
    }


    /**
     * Gets the attribute value for CurrBranchCodeFk, using the alias name CurrBranchCodeFk.
     * @return the value of CurrBranchCodeFk
     */
    public String getCurrBranchCodeFk() {
        return (String) getAttributeInternal(CURRBRANCHCODEFK);
    }

    /**
     * Sets <code>value</code> as the attribute value for CurrBranchCodeFk.
     * @param value value to set the CurrBranchCodeFk
     */
    public void setCurrBranchCodeFk(String value) {
        setAttributeInternal(CURRBRANCHCODEFK, value);
    }

    /**
     * Gets the attribute value for NewBranchCodeFk, using the alias name NewBranchCodeFk.
     * @return the value of NewBranchCodeFk
     */
    public String getNewBranchCodeFk() {
        return (String) getAttributeInternal(NEWBRANCHCODEFK);
    }

    /**
     * Sets <code>value</code> as the attribute value for NewBranchCodeFk.
     * @param value value to set the NewBranchCodeFk
     */
    public void setNewBranchCodeFk(String value) {
        setAttributeInternal(NEWBRANCHCODEFK, value);
    }


    /**
     * Gets the attribute value for RrfDocNo, using the alias name RrfDocNo.
     * @return the value of RrfDocNo
     */
    public String getRrfDocNo() {
        return (String) getAttributeInternal(RRFDOCNO);
    }

    /**
     * Sets <code>value</code> as the attribute value for RrfDocNo.
     * @param value value to set the RrfDocNo
     */
    public void setRrfDocNo(String value) {
        setAttributeInternal(RRFDOCNO, value);
    }

    /**
     * Gets the attribute value for WorkflowNotificationId, using the alias name WorkflowNotificationId.
     * @return the value of WorkflowNotificationId
     */
    public Number getWorkflowNotificationId() {
        return (Number) getAttributeInternal(WORKFLOWNOTIFICATIONID);
    }

    /**
     * Sets <code>value</code> as the attribute value for WorkflowNotificationId.
     * @param value value to set the WorkflowNotificationId
     */
    public void setWorkflowNotificationId(Number value) {
        setAttributeInternal(WORKFLOWNOTIFICATIONID, value);
    }

    /**
     * Gets the attribute value for WorkflowStatus, using the alias name WorkflowStatus.
     * @return the value of WorkflowStatus
     */
    public String getWorkflowStatus() {
        return (String) getAttributeInternal(WORKFLOWSTATUS);
    }

    /**
     * Sets <code>value</code> as the attribute value for WorkflowStatus.
     * @param value value to set the WorkflowStatus
     */
    public void setWorkflowStatus(String value) {
        setAttributeInternal(WORKFLOWSTATUS, value);
    }

    /**
     * @return the associated entity oracle.jbo.RowIterator.
     */
    public RowIterator getDssReinstatementExistMgr() {
        return (RowIterator) getAttributeInternal(DSSREINSTATEMENTEXISTMGR);
    }

    /**
     * @return the associated entity oracle.jbo.RowIterator.
     */
    public RowIterator getDssReinstatementNewHiring1() {
        return (RowIterator) getAttributeInternal(DSSREINSTATEMENTNEWHIRING1);
    }


    /**
     * @param rrfIdPk key constituent

     * @return a Key object based on given key constituents.
     */
    public static Key createPrimaryKey(Number rrfIdPk) {
        return new Key(new Object[] { rrfIdPk });
    }

    /**
     * Add attribute defaulting logic in this method.
     * @param attributeList list of attribute names/values to initialize the row
     */
     protected void create(AttributeList attributeList) {
         super.create(attributeList);
         Date currentDate = new Date();
         setEnterDate((Date) currentDate.getCurrentDate());
         setLastUpdatedDate((Date) currentDate.getCurrentDate());
         SequenceImpl seq = new SequenceImpl("DSS_REINSTATEMENT_REQ_FORM_SEQ", getDBTransaction());
         setRrfIdPk(seq.getSequenceNumber());
         
         FacesContext fctx = FacesContext.getCurrentInstance();
         ExternalContext ectx = fctx.getExternalContext();
         HttpSession userSession = (HttpSession) ectx.getSession(false);
         try {
             setUserIdFk(new Number(userSession.getAttribute("pUserId")));
             setLastUpdatedBy(new Number(userSession.getAttribute("pUserId")));
         } catch (SQLException ex) {
             setUserIdFk(new Number(0));
             setLastUpdatedBy(new Number(0));
         }
     }


    /**
     * Add entity remove logic in this method.
     */
    public void remove() {
        super.remove();
    }

    /**
     * Add locking logic here.
     */
    public void lock() {
        super.lock();
    }

    /**
     * Custom DML update/insert/delete logic here.
     * @param operation the operation type
     * @param e the transaction event
     */
    protected void doDML(int operation, TransactionEvent e) {
        if (operation == DML_INSERT) {
            DBTransaction txn = getDBTransaction();
            CallableStatement callableStatement =
                txn.createCallableStatement("begin ? := dss_all_pkg.GET_RRF_NUMBER; end;", DBTransaction.DEFAULT);
            try {
                callableStatement.registerOutParameter(1, Types.VARCHAR);
                callableStatement.executeUpdate();
                String vRrfNumber = callableStatement.getString(1);
                callableStatement.close();
                setRrfDocNo(vRrfNumber);
            } catch (SQLException sqle) {
                try {
                    callableStatement.close();
                } catch (SQLException f) {
                }
            }
        }
        Date currentDate = new Date();
        if (operation == DML_UPDATE) {
            setLastUpdatedDate((Date) currentDate.getCurrentDate());
            FacesContext fctx = FacesContext.getCurrentInstance();
            ExternalContext ectx = fctx.getExternalContext();
            HttpSession userSession = (HttpSession) ectx.getSession(false);
            try {
                setUserIdFk(new Number(userSession.getAttribute("pUserId")));
                setLastUpdatedBy(new Number(userSession.getAttribute("pUserId")));
            } catch (SQLException ex) {
                setUserIdFk(new Number(0));
                setLastUpdatedBy(new Number(0));
            }
        }
        super.doDML(operation, e);
    }
}

